version: 2.1

executors:
  node10:
    docker:
      - image: circleci/node:10
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install npm 6.9.0
          command: sudo npm -g install npm@6.9.0
      - run:
          name: Installing Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

orbs:
    helix-smoke-tests: adobe/helix-smoke-tests@0.0.11

jobs:
  build:
    executor: node10
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: Test and Code Coverage
          command: npm run test-ci
          environment:
            MOCHA_FILE: junit/test-results.xml

      - store_test_results:
          path: junit

      - store_artifacts:
          path: junit

      - run:
          name: Generating Docs
          command: npm run docs

  release:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json

      - run:
          name: Semantic Release
          command: npm run semantic-release

  generate-docs:
    executor: node10
    steps:
      - setup
      - add_ssh_keys:
          fingerprints:
            - "e2:da:a5:eb:5a:3c:69:a8:d7:1a:db:19:26:86:69:2b"

      # generate markdowm
      - run: npm run docs
      - run: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

      # send up-to-date markdown back to GitHub
      - run: git checkout -- package-lock.json
      - run:
          name: Publish Markdown to GitHub
          command: git pull --no-commit && git add --force docs/* && git commit --allow-empty -m "[ci skip] updating documentation" && git push

workflows:
  version: 2
  build:
    jobs:
    # run build on any branch
    - build

    # publish releases on master
    - release:
        requires:
        - build
        filters:
          branches:
            only: master

    # generate documentation on master
    - generate-docs:
        requires:
        - build
        - release
        filters:
          branches:
            only: master

  smoke:
    jobs:
    - helix-smoke-tests/run:
        remote_repo: adobe/helix-continuous
